<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader"><![CDATA[{
  "useNewFormat": true
}]]></component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="gpgpt" targetName="stb" />
      <config projectName="gpgpt" targetName="completion" />
      <config projectName="gpgpt" targetName="igl_core" />
      <config projectName="gpgpt" targetName="gitlike" />
      <config projectName="gpgpt" targetName="argstest-multiple-inclusion" />
      <config projectName="gpgpt" targetName="glad" />
      <config projectName="gpgpt" targetName="argstest" />
      <config projectName="gpgpt" targetName="polyscope" />
      <config projectName="gpgpt" targetName="03_disk_bvp_v1" />
      <config projectName="gpgpt" targetName="imgui" />
      <config projectName="gpgpt" targetName="TinyAD-Headers" />
      <config projectName="gpgpt" targetName="02_tiny_ad_test" />
      <config projectName="gpgpt" targetName="04_adfunc_wrapper" />
      <config projectName="gpgpt" targetName="01_basic_test" />
      <config projectName="gpgpt" targetName="06_polyvectors" />
      <config projectName="gpgpt" targetName="igl_copyleft_core" />
      <config projectName="gpgpt" targetName="05_disk_gpgpt_v1" />
      <config projectName="gpgpt" targetName="glfw" />
      <config projectName="gpgpt" targetName="update_mappings" />
      <config projectName="gpgpt" targetName="gpgpt" />
      <config projectName="gpgpt" targetName="argstest-windows-h" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="RelWithDebInfo" ENABLED="true" CONFIG_NAME="RelWithDebInfo" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d658c1ca-042c-4a39-97ea-082baac63a6e" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/tools/06_polyvectors_tool/src/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/tools/06_polyvectors_tool/src/main.cpp" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:RelWithDebInfo" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2ZsCNFDAQpfHDSAoY4Q09DClj8y" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "WebServerToolWindowFactoryState": "false",
    "cf.advertisement.text.overridden": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "last_opened_file_path": "/home/zchen96/Projects/gpgpt",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="CMake Application.06_polyvectors">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="01_basic_test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="01_basic_test" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="01_basic_test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="02_tiny_ad_test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="02_tiny_ad_test" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="02_tiny_ad_test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="03_disk_bvp_v1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="03_disk_bvp_v1" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="03_disk_bvp_v1">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="04_adfunc_wrapper" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="04_adfunc_wrapper" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="04_adfunc_wrapper">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="05_disk_gpgpt_v1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="05_disk_gpgpt_v1" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="05_disk_gpgpt_v1">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="06_polyvectors" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="06_polyvectors" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="06_polyvectors">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TinyAD-Headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="TinyAD-Headers" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="argstest-multiple-inclusion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="argstest-multiple-inclusion" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="argstest-multiple-inclusion">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="argstest-windows-h" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="argstest-windows-h" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="argstest-windows-h">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="argstest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="argstest" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="argstest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="completion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="completion" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="completion">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gitlike" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="gitlike" CONFIG_NAME="RelWithDebInfo" RUN_TARGET_PROJECT_NAME="gpgpt" RUN_TARGET_NAME="gitlike">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glad" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="glad" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="glfw" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gpgpt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="gpgpt" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="igl_copyleft_core" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="igl_copyleft_core" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="igl_core" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="igl_core" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="imgui" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="imgui" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="polyscope" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="polyscope" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="stb" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="stb" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="update_mappings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="gpgpt" TARGET_NAME="update_mappings" CONFIG_NAME="RelWithDebInfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.gpgpt" />
      <item itemvalue="CMake Application.argstest" />
      <item itemvalue="CMake Application.argstest-multiple-inclusion" />
      <item itemvalue="CMake Application.argstest-windows-h" />
      <item itemvalue="CMake Application.completion" />
      <item itemvalue="CMake Application.gitlike" />
      <item itemvalue="CMake Application.igl_copyleft_core" />
      <item itemvalue="CMake Application.igl_core" />
      <item itemvalue="CMake Application.glad" />
      <item itemvalue="CMake Application.glfw" />
      <item itemvalue="CMake Application.update_mappings" />
      <item itemvalue="CMake Application.imgui" />
      <item itemvalue="CMake Application.stb" />
      <item itemvalue="CMake Application.polyscope" />
      <item itemvalue="CMake Application.TinyAD-Headers" />
      <item itemvalue="CMake Application.01_basic_test" />
      <item itemvalue="CMake Application.02_tiny_ad_test" />
      <item itemvalue="CMake Application.03_disk_bvp_v1" />
      <item itemvalue="CMake Application.04_adfunc_wrapper" />
      <item itemvalue="CMake Application.05_disk_gpgpt_v1" />
      <item itemvalue="CMake Application.06_polyvectors" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d658c1ca-042c-4a39-97ea-082baac63a6e" name="Changes" comment="" />
      <created>1703201357475</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1703201357475</updated>
      <workItem from="1703201358544" duration="4413000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/tools/06_polyvectors_tool/src/main.cpp</url>
          <line>206</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/tools/06_polyvectors_tool/src/main.cpp</url>
          <line>198</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/tools/06_polyvectors_tool/src/main.cpp</url>
          <line>130</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/tools/06_polyvectors_tool/src/main.cpp</url>
          <line>142</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>